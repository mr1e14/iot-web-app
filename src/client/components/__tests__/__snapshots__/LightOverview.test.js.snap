// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LightOverview when light is disabled renders correctly 1`] = `
<div
  className="MuiGrid-root lightRow MuiGrid-container MuiGrid-align-items-xs-center"
  style={
    Object {
      "background": "linear-gradient(45deg, #42f48f 35%, rgb(242,242,242) 90%)",
      "cursor": "pointer",
      "opacity": 0.2,
    }
  }
>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
  >
    <button
      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
      disabled={false}
      onBlur={[Function]}
      onDragEnd={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "color": "#ffffff",
        }
      }
      tabIndex={0}
      type="button"
    >
      <span
        className="MuiButton-label"
      >
        <p
          className="MuiTypography-root MuiTypography-body1"
        >
          Bedroom
        </p>
      </span>
    </button>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-2"
  >
    <button
      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onDragEnd={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={0}
      type="button"
    >
      <span
        className="MuiIconButton-label"
      >
        <span
          aria-hidden={true}
          className="material-icons MuiIcon-root md-28"
        >
          power_settings_new
        </span>
      </span>
    </button>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
  >
    <div
      className="LightBrightnessSlider-root-1"
    >
      <div
        className="MuiSlider-root Mui-disabled LightBrightnessSlider-slider-2"
        onClick={[Function]}
        onMouseDown={[Function]}
        onTouchMove={[Function]}
        onTouchStartCapture={[Function]}
      >
        <div
          className="MuiSlider-container"
        >
          <div
            className="MuiSlider-track LightBrightnessSlider-track-3 MuiSlider-trackBefore Mui-disabled"
            style={
              Object {
                "width": "calc(24.242424242424242% - 6px)",
              }
            }
          />
          <div
            className="MuiSlider-thumbWrapper Mui-disabled"
            style={
              Object {
                "transform": "translateX(24.242424242424242%)",
              }
            }
          >
            <button
              aria-orientation="horizontal"
              aria-valuemax={100}
              aria-valuemin={1}
              aria-valuenow={25}
              className="MuiButtonBase-root MuiSlider-thumb LightBrightnessSlider-thumb-4 Mui-disabled Mui-disabled"
              disabled={true}
              onBlur={[Function]}
              onDragEnd={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              onTouchStartCapture={[Function]}
              role="slider"
              tabIndex={-1}
              type="button"
            />
          </div>
          <div
            className="MuiSlider-track LightBrightnessSlider-track-3 MuiSlider-trackAfter Mui-disabled"
            style={
              Object {
                "width": "calc(75.75757575757575% - 6px)",
              }
            }
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LightOverview when light is disconnected renders correctly 1`] = `
<div
  className="MuiGrid-root lightRow MuiGrid-container MuiGrid-align-items-xs-center"
  style={
    Object {
      "background": "linear-gradient(45deg, #1a1a1a 35%, rgb(242,242,242) 90%)",
      "cursor": "no-drop",
      "opacity": 0.2,
    }
  }
>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
  >
    <button
      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled MuiButton-fullWidth Mui-disabled"
      disabled={true}
      onBlur={[Function]}
      onDragEnd={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "color": "#ffffff",
        }
      }
      tabIndex={-1}
      type="button"
    >
      <span
        className="MuiButton-label"
      >
        <p
          className="MuiTypography-root MuiTypography-body1"
        >
          Bedroom
        </p>
      </span>
    </button>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-2"
  >
    <button
      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary Mui-disabled Mui-disabled"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onDragEnd={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={-1}
      type="button"
    >
      <span
        className="MuiIconButton-label"
      >
        <span
          aria-hidden={true}
          className="material-icons MuiIcon-root md-28"
        >
          power_off
        </span>
      </span>
    </button>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
  >
    <div
      className="LightBrightnessSlider-root-1"
    >
      <div
        className="MuiSlider-root Mui-disabled LightBrightnessSlider-slider-2"
        onClick={[Function]}
        onMouseDown={[Function]}
        onTouchMove={[Function]}
        onTouchStartCapture={[Function]}
      >
        <div
          className="MuiSlider-container"
        >
          <div
            className="MuiSlider-track LightBrightnessSlider-track-3 MuiSlider-trackBefore Mui-disabled"
            style={
              Object {
                "width": "calc(0% - 6px)",
              }
            }
          />
          <div
            className="MuiSlider-thumbWrapper Mui-disabled"
            style={
              Object {
                "transform": "translateX(0%)",
              }
            }
          >
            <button
              aria-orientation="horizontal"
              aria-valuemax={100}
              aria-valuemin={1}
              aria-valuenow={1}
              className="MuiButtonBase-root MuiSlider-thumb LightBrightnessSlider-thumb-4 Mui-disabled Mui-disabled"
              disabled={true}
              onBlur={[Function]}
              onDragEnd={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              onTouchStartCapture={[Function]}
              role="slider"
              tabIndex={-1}
              type="button"
            />
          </div>
          <div
            className="MuiSlider-track LightBrightnessSlider-track-3 MuiSlider-trackAfter Mui-disabled"
            style={
              Object {
                "width": "calc(100% - 6px)",
              }
            }
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LightOverview when light is enabled renders correctly 1`] = `
<div
  className="MuiGrid-root lightRow MuiGrid-container MuiGrid-align-items-xs-center"
  style={
    Object {
      "background": "linear-gradient(45deg, #42f48f 35%, rgb(242,242,242) 90%)",
      "cursor": "pointer",
      "opacity": 1,
    }
  }
>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
  >
    <button
      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
      disabled={false}
      onBlur={[Function]}
      onDragEnd={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "color": "#ffffff",
        }
      }
      tabIndex={0}
      type="button"
    >
      <span
        className="MuiButton-label"
      >
        <p
          className="MuiTypography-root MuiTypography-body1"
        >
          Bedroom
        </p>
      </span>
    </button>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-2"
  >
    <button
      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onDragEnd={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={0}
      type="button"
    >
      <span
        className="MuiIconButton-label"
      >
        <span
          aria-hidden={true}
          className="material-icons MuiIcon-root md-28"
        >
          power_settings_new
        </span>
      </span>
    </button>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
  >
    <div
      className="LightBrightnessSlider-root-1"
    >
      <div
        className="MuiSlider-root LightBrightnessSlider-slider-2"
        onClick={[Function]}
        onMouseDown={[Function]}
        onTouchMove={[Function]}
        onTouchStartCapture={[Function]}
      >
        <div
          className="MuiSlider-container"
        >
          <div
            className="MuiSlider-track LightBrightnessSlider-track-3 MuiSlider-trackBefore"
            style={
              Object {
                "transform": "translateY(-50%) scaleX(0.7474747474747475)",
              }
            }
          />
          <div
            className="MuiSlider-thumbWrapper"
            style={
              Object {
                "transform": "translateX(74.74747474747475%)",
              }
            }
          >
            <button
              aria-orientation="horizontal"
              aria-valuemax={100}
              aria-valuemin={1}
              aria-valuenow={75}
              className="MuiButtonBase-root MuiSlider-thumb LightBrightnessSlider-thumb-4"
              disabled={false}
              onBlur={[Function]}
              onDragEnd={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              onTouchStartCapture={[Function]}
              role="slider"
              tabIndex={0}
              type="button"
            />
          </div>
          <div
            className="MuiSlider-track LightBrightnessSlider-track-3 MuiSlider-trackAfter"
            style={
              Object {
                "transform": "translateY(-50%) scaleX(0.25252525252525243)",
              }
            }
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;
